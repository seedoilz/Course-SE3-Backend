<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="nju.sentistrength.project.dao.DataMapper">
  <resultMap id="BaseResultMap" type="nju.sentistrength.project.model.Data">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="issue_number" jdbcType="INTEGER" property="issueNumber" />
    <result column="internal_issue_number" jdbcType="INTEGER" property="internalIssueNumber" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="ended_at" jdbcType="TIMESTAMP" property="endedAt" />
    <result column="is_pull_request" jdbcType="BIT" property="isPullRequest" />
    <result column="labels" jdbcType="VARCHAR" property="labels" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="version_number" jdbcType="VARCHAR" property="versionNumber" />
    <result column="positive_score" jdbcType="INTEGER" property="positiveScore" />
    <result column="negative_score" jdbcType="INTEGER" property="negativeScore" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>

    <resultMap id="timeSentimentData" type="nju.sentistrength.project.model.VO.TimeSentimentData">
        <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime"/>
        <result column="positive_number" jdbcType="INTEGER" property="positiveNumber" />
        <result column="neutral_number" jdbcType="INTEGER" property="neutralNumber" />
        <result column="negative_number" jdbcType="INTEGER" property="negativeNumber" />
    </resultMap>



  <select id="getData" resultMap="timeSentimentData">
    select DATE_FORMAT(d.created_at, '%Y-%m') begin_time
         , COUNT(if(d.positive_score+d.negative_score > 0,1,null)) positive_number
         , COUNT(if(d.positive_score+d.negative_score = 0,1,null)) neutral_number
         , COUNT(if(d.positive_score+d.negative_score &lt; 0,1,null)) negative_number
    from `data` d, collection c, collection_data c_d where
        c.id = #{collectionId} AND c.id = c_d.collection_id AND c_d.data_id=d.id
         AND d.created_at >= #{beginDate} AND d.created_at &lt;= #{endDate}
    group by begin_time;
  </select>

<!--    <select id="getDataByVersion" resultMap="timeSentimentData">-->
<!--        select d.version_number version-->
<!--            ,COUNT(if(d.positive_score+d.negative_score > 0,1,null)) positive_number-->
<!--             , COUNT(if(d.positive_score+d.negative_score = 0,1,null)) neutral_number-->
<!--             , COUNT(if(d.positive_score+d.negative_score &lt; 0,1,null)) negative_number-->
<!--    from `data` d, collection c, collection_data c_d where-->
<!--            c.id = #{collectionId} AND c.id = c_d.collection_id AND c_d.data_id=d.id-->
<!--    group by version;-->
<!--    </select>-->

    <select id="getDataByVersion" resultMap="timeSentimentData">
        select d.version_number version
             ,COUNT(if(d.positive_score+d.negative_score > 0,1,null)) positive_number
             , COUNT(if(d.positive_score+d.negative_score = 0,1,null)) neutral_number
             , COUNT(if(d.positive_score+d.negative_score &lt; 0,1,null)) negative_number
        from `data` d where
            d.project_name = #{project}
        group by version;
    </select>

    <select id="getDataByUsername" resultType="nju.sentistrength.project.model.VO.ScoreSentimentData">
        select d.username username,
               d.project_name project,
               d.created_at createdAt,
                d.positive_score positiveScore,
               d.negative_score negativeScore,
               d.version_number version
        from `data` d, collection c, collection_data c_d where
            c.id = #{collectionId} AND c.id = c_d.collection_id AND c_d.data_id=d.id
            AND d.username = #{username};
    </select>

    <select id="getDataByCollection" resultMap="BaseResultMap">
        select d.*
        from`data` d, collection c, collection_data c_d where
            c.id = #{collectionId} AND c.id = c_d.collection_id AND c_d.data_id=d.id
    </select>
</mapper>
